---
source: fmm/src/analysis/cps.rs
expression: "format::format_module(&transform(&Module::new(vec![],\n                        vec![FunctionDeclaration ::\n                            new(\"f\", function_type.clone())], vec![],\n                        vec![create_function_definition(\"g\", vec! [], types ::\n                            Primitive :: Float64, Block ::\n                            new(vec!\n                            [If ::\n                            new(types :: Primitive :: Float64, Primitive ::\n                            Boolean(true), Block ::\n                            new(vec!\n                            [Call ::\n                            new(function_type, Variable :: new(\"f\"), vec!\n                            [Primitive :: Float64(42.0).into()], \"x\",).into()], Branch\n                            ::\n                            new(types :: Primitive :: Float64, Variable :: new(\"x\")),),\n                            Block :: new(vec! [], TerminalInstruction :: Unreachable),\n                            \"y\",).into()], Return ::\n                            new(types :: Primitive :: Float64, ArithmeticOperation ::\n                            new(types :: Primitive :: Float64, ArithmeticOperator ::\n                            Add, Variable :: new(\"y\"), Variable :: new(\"y\"))),),)]),\n                void_type()).unwrap())"
---
(module
  (function g _s _k
    (block
      (if true
        (block
          (load (record-address _s 1) _k_0)
          (if (== (size-of record) 0)
            (block
              (branch 0))
            (block
              (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
            _k_1)
          (load (record-address _s 2) _k_2)
          (if (> (+ _k_0 _k_1) _k_2)
            (block
              (load (record-address _s 0) _k_3)
              (reallocate-heap _k_3 (* _k_2 2) _k_4)
              (store _k_4 (record-address _s 0))
              (store (* _k_2 2) (record-address _s 2))
              (branch (record)))
            (block
              (branch (record)))
            _k_5)
          (load (record-address _s 0) _k_6)
          (load (record-address _s 1) _k_7)
          (store (record _k) (bit-cast (pointer-address _k_6 _k_7)))
          (store (+ _k_0 _k_1) (record-address _s 1))
          (call f _s _k_9 42 _k_8)
          (return _k_8))
        (block
          (unreachable))
        )
      (unreachable)))
  (function _k_9 _s x
    (block
      (load (record-address _s 1) _k_b)
      (if (== (size-of record) 0)
        (block
          (branch 0))
        (block
          (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
        _k_c)
      (store (- _k_b _k_c) (record-address _s 1))
      (load (record-address _s 0) _k_d)
      (load (record-address _s 1) _k_e)
      (load (bit-cast (pointer-address _k_d _k_e)) _k_f)
      (deconstruct-record _k_f 0 _k)
      (call _k _s (+ x x) _k_a)
      (return _k_a))))
