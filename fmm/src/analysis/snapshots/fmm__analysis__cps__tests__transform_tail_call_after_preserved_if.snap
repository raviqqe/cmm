---
source: fmm/src/analysis/cps.rs
expression: "format::format_module(&transform(&Module::new(vec![],\n                        vec![FunctionDeclaration ::\n                            new(\"f\", function_type.clone())], vec![],\n                        vec![create_function_definition(\"g\", vec! [], types ::\n                            Primitive :: Float64, Block ::\n                            new(vec!\n                            [If ::\n                            new(types :: Primitive :: Float64, Primitive ::\n                            Boolean(true), Block ::\n                            new(vec!\n                            [Load ::\n                            new(types :: Primitive :: Float64, Undefined ::\n                            new(types :: Pointer :: new(types :: Primitive :: Float64)),\n                            \"x\").into()], Branch ::\n                            new(types :: Primitive :: Float64, Variable :: new(\"x\")),),\n                            Block :: new(vec! [], TerminalInstruction :: Unreachable),\n                            \"y\",).into(), Call ::\n                            new(function_type, Variable :: new(\"f\"), vec!\n                            [Variable :: new(\"y\").into()], \"z\",).into()], Return ::\n                            new(types :: Primitive :: Float64, Variable ::\n                            new(\"z\")),),)]), void_type()).unwrap())"
---
(module
  (function g _s _k
    (block
      (if true
        (block
          (load undefined x)
          (branch x))
        (block
          (unreachable))
        y)
      (call f _s _k y _k_0)
      (return _k_0))))
