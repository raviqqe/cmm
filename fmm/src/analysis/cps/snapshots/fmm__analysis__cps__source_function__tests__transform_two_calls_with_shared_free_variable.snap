---
source: fmm/src/analysis/cps/source_function.rs
expression: "format::format_module(&transform_module(Module::new(vec![], vec![], vec![],\n                    vec![FunctionDefinition ::\n                        new(\"f\", vec!\n                        [Argument :: new(\"x\", types :: Primitive :: Float64)], types\n                        :: Primitive :: Float64, Block ::\n                        new(vec!\n                        [Call ::\n                        new(types :: Function ::\n                        new(vec! [], types :: Primitive :: Float64, types ::\n                        CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                        \"y\",).into(), Call ::\n                        new(types :: Function ::\n                        new(vec! [], types :: Primitive :: Float64, types ::\n                        CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                        \"z\",).into()], Return ::\n                        new(types :: Primitive :: Float64, Variable :: new(\"x\")),),\n                        Default :: default())])).unwrap())"
---
(module
  (function f _s _k x
    (block
      (load (record-address _s 1) _k_1)
      (call _fmm_stack_extend _s (size-of record) _k_2)
      (load (record-address _s 0) _k_3)
      (store (record _k x) (bit-cast (pointer-address _k_3 _k_1)))
      (call f _s _k_4 _k_0)
      (return _k_0)))
  (function _k_4 _s y
    (block
      (load (record-address _s 1) _k_a)
      (call _fmm_stack_align_size (size-of record) _k_b)
      (store (- _k_a _k_b) (record-address _s 1))
      (load (record-address _s 0) _k_c)
      (load (bit-cast (pointer-address _k_c (- _k_a _k_b))) _k_d)
      (deconstruct-record _k_d 0 _k)
      (deconstruct-record _k_d 1 x)
      (load (record-address _s 1) _k_6)
      (call _fmm_stack_extend _s (size-of record) _k_7)
      (load (record-address _s 0) _k_8)
      (store (record _k x) (bit-cast (pointer-address _k_8 _k_6)))
      (call f _s _k_9 _k_5)
      (return _k_5)))
  (function _k_9 _s z
    (block
      (load (record-address _s 1) _k_f)
      (call _fmm_stack_align_size (size-of record) _k_10)
      (store (- _k_f _k_10) (record-address _s 1))
      (load (record-address _s 0) _k_11)
      (load (bit-cast (pointer-address _k_11 (- _k_f _k_10))) _k_12)
      (deconstruct-record _k_12 0 _k)
      (deconstruct-record _k_12 1 x)
      (call _k _s x _k_e)
      (return _k_e))))
