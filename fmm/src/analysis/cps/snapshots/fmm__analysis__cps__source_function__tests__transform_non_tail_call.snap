---
source: fmm/src/analysis/cps/source_function.rs
expression: "format::format_module(&transform_module(&Module::new(vec![], vec![], vec![],\n                        vec![FunctionDefinition ::\n                            new(\"f\", vec! [], types :: Primitive :: Float64, Block ::\n                            new(vec!\n                            [Call ::\n                            new(types :: Function ::\n                            new(vec! [], types :: Primitive :: Float64, types ::\n                            CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                            \"x\",).into(), Store ::\n                            new(types :: Primitive :: Float64, Undefined ::\n                            new(types :: Primitive :: Float64), Variable ::\n                            new(\"x\")).into()], Return ::\n                            new(types :: Primitive :: Float64, Variable :: new(\"x\")),),\n                            Default :: default())])).unwrap())"
---
(module
  (function f _s _k
    (block
      (load (record-address _s 1) _k_1)
      (call _fmm_stack_extend _s (size-of record) _k_2)
      (load (record-address _s 0) _k_3)
      (store (record _k) (bit-cast (pointer-address _k_3 _k_1)))
      (call f _s _k_4 _k_0)
      (return _k_0)))
  (function _k_4 _s x
    (block
      (load (record-address _s 1) _k_6)
      (call _fmm_stack_align_size (size-of record) _k_7)
      (store (- _k_6 _k_7) (record-address _s 1))
      (load (record-address _s 1) _k_8)
      (load (record-address _s 0) _k_9)
      (load (bit-cast (pointer-address _k_9 _k_8)) _k_a)
      (deconstruct-record _k_a 0 _k)
      (store undefined x)
      (call _k _s x _k_5)
      (return _k_5))))
