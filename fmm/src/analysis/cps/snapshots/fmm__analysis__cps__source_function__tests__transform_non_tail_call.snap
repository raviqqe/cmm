---
source: fmm/src/analysis/cps/source_function.rs
expression: "format::format_module(&transform_module(&Module::new(vec![], vec![], vec![],\n                        vec![FunctionDefinition ::\n                            new(\"f\", vec! [], types :: Primitive :: Float64, Block ::\n                            new(vec!\n                            [Call ::\n                            new(types :: Function ::\n                            new(vec! [], types :: Primitive :: Float64, types ::\n                            CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                            \"x\",).into(), Store ::\n                            new(types :: Primitive :: Float64, Undefined ::\n                            new(types :: Primitive :: Float64), Variable ::\n                            new(\"x\")).into()], Return ::\n                            new(types :: Primitive :: Float64, Variable :: new(\"x\")),),\n                            Default :: default())])).unwrap())"
---
(module
  (function f _s _k
    (block
      (load (record-address _s 1) _k_1)
      (if (== (size-of record) 0)
        (block
          (branch 0))
        (block
          (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
        _k_2)
      (load (record-address _s 2) _k_3)
      (if (> (+ _k_1 _k_2) _k_3)
        (block
          (load (record-address _s 0) _k_4)
          (reallocate-heap _k_4 (* _k_3 2) _k_5)
          (store _k_5 (record-address _s 0))
          (store (* _k_3 2) (record-address _s 2))
          (branch (record)))
        (block
          (branch (record)))
        _k_6)
      (load (record-address _s 0) _k_7)
      (load (record-address _s 1) _k_8)
      (store (record _k) (bit-cast (pointer-address _k_7 _k_8)))
      (store (+ _k_1 _k_2) (record-address _s 1))
      (call f _s _k_9 _k_0)
      (return _k_0)))
  (function _k_9 _s x
    (block
      (load (record-address _s 1) _k_b)
      (if (== (size-of record) 0)
        (block
          (branch 0))
        (block
          (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
        _k_c)
      (store (- _k_b _k_c) (record-address _s 1))
      (load (record-address _s 0) _k_d)
      (load (record-address _s 1) _k_e)
      (load (bit-cast (pointer-address _k_d _k_e)) _k_f)
      (deconstruct-record _k_f 0 _k)
      (store undefined x)
      (call _k _s x _k_a)
      (return _k_a))))
