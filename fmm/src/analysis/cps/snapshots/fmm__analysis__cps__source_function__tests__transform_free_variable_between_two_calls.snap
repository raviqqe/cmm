---
source: fmm/src/analysis/cps/source_function.rs
expression: "format::format_module(&transform_module(Module::new(vec![], vec![], vec![],\n                    vec![FunctionDefinition ::\n                        new(\"f\", vec! [], types :: Primitive :: Float64, Block ::\n                        new(vec!\n                        [Call ::\n                        new(types :: Function ::\n                        new(vec! [], types :: Primitive :: Float64, types ::\n                        CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                        \"x\",).into(), Load ::\n                        new(types :: Primitive :: Float64, Undefined ::\n                        new(types :: Pointer :: new(types :: Primitive :: Float64)),\n                        \"y\",).into(), Call ::\n                        new(types :: Function ::\n                        new(vec! [], types :: Primitive :: Float64, types ::\n                        CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                        \"z\",).into()], Return ::\n                        new(types :: Primitive :: Float64, ArithmeticOperation ::\n                        new(types :: Primitive :: Float64, ArithmeticOperator ::\n                        Add, Variable :: new(\"y\"), Variable :: new(\"z\"))),), Default\n                        :: default())])).unwrap())"
---
(module
  (function f _s _k
    (block
      (load (record-address _s 1) _k_10)
      (call _fmm_stack_extend _s (size-of record) _k_11)
      (load (record-address _s 0) _k_12)
      (store (record _k) (bit-cast (pointer-address _k_12 _k_10)))
      (call f _s _k_b _k_0)
      (return _k_0)))
  (function _k_3 _s z
    (block
      (load (record-address _s 1) _k_4)
      (call _fmm_stack_align_size (size-of record) _k_5)
      (store (- _k_4 _k_5) (record-address _s 1))
      (load (record-address _s 0) _k_6)
      (load (bit-cast (pointer-address _k_6 (- _k_4 _k_5))) _k_7)
      (deconstruct-record _k_7 0 _k)
      (deconstruct-record _k_7 1 y)
      (call _k _s (+ y z) _k_2)
      (return _k_2)))
  (function _k_b _s x
    (block
      (load (record-address _s 1) _k_c)
      (call _fmm_stack_align_size (size-of record) _k_d)
      (store (- _k_c _k_d) (record-address _s 1))
      (load (record-address _s 0) _k_e)
      (load (bit-cast (pointer-address _k_e (- _k_c _k_d))) _k_f)
      (deconstruct-record _k_f 0 _k)
      (load undefined y)
      (load (record-address _s 1) _k_8)
      (call _fmm_stack_extend _s (size-of record) _k_9)
      (load (record-address _s 0) _k_a)
      (store (record _k y) (bit-cast (pointer-address _k_a _k_8)))
      (call f _s _k_3 _k_1)
      (return _k_1))))
