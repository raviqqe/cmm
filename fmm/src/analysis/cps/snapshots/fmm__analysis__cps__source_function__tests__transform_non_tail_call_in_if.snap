---
source: fmm/src/analysis/cps/source_function.rs
expression: "format::format_module(&transform_module(&Module::new(vec![], vec![], vec![],\n                        vec![FunctionDefinition ::\n                            new(\"f\", vec! [], types :: Primitive :: Float64, Block ::\n                            new(vec!\n                            [If ::\n                            new(void_type(), Primitive :: Boolean(true), Block ::\n                            new(vec!\n                            [Call ::\n                            new(types :: Function ::\n                            new(vec! [], types :: Primitive :: Float64, types ::\n                            CallingConvention :: Source), Variable :: new(\"f\"), vec! [],\n                            \"x\",).into(), Store ::\n                            new(types :: Primitive :: Float64, Undefined ::\n                            new(types :: Primitive :: Float64), Variable ::\n                            new(\"x\")).into()], Return ::\n                            new(types :: Primitive :: Float64, Variable :: new(\"x\"))),\n                            Block :: new(vec! [], TerminalInstruction :: Unreachable),\n                            \"_\",).into()], TerminalInstruction :: Unreachable,), Default\n                            :: default())])).unwrap())"
---
(module
  (function f _s _k
    (block
      (if true
        (block
          (load (record-address _s 0) _k_1)
          (load (record-address _s 1) _k_2)
          (if (== (size-of record) 0)
            (block
              (branch 0))
            (block
              (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
            _k_3)
          (call _fmm_stack_extend _s _k_3 _k_4)
          (store (record _k) (bit-cast (pointer-address _k_1 _k_2)))
          (call f _s _k_5 _k_0)
          (return _k_0))
        (block
          (unreachable))
        _)
      (unreachable)))
  (function _k_5 _s x
    (block
      (load (record-address _s 1) _k_7)
      (if (== (size-of record) 0)
        (block
          (branch 0))
        (block
          (branch (* (+ (/ (- (size-of record) 1) (align-of pointer-integer)) 1) (align-of pointer-integer))))
        _k_8)
      (store (- _k_7 _k_8) (record-address _s 1))
      (load (record-address _s 0) _k_9)
      (load (record-address _s 1) _k_a)
      (load (bit-cast (pointer-address _k_9 _k_a)) _k_b)
      (deconstruct-record _k_b 0 _k)
      (store undefined x)
      (call _k _s x _k_6)
      (return _k_6))))
